@*Edit view of product*@
@model auth.Models.product

@{
    ViewBag.Title = "Edit";
}

<h2>Edit Product</h2>
@Html.Raw(TempData["update"])
@Html.Raw( TempData["Size"])
@Html.Raw(TempData["Format"])
@using (Html.BeginForm("Edit", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.product_name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.product_name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.product_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.category_name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.category_name, new SelectList(new[] { "Earphone", "Speaker", "Laptop Bag" }), "Select Category", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.category_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.quantity, new SelectList(new[] { "1", "2", "3" }), "Select Quantity", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.sdes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.sdes, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.sdes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ldes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.ldes, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ldes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.simg, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                    @*displaying the image from database*@
                    <img src="@Url.Content( Session["Image"].ToString())" width="80" height="80" />
                    <input type="file" name="file" id="file" />
            @Html.ValidationMessageFor(model => model.simg, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.limg, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*displaying the image from database*@
                <img src="@Url.Content(Session["Image1"].ToString())" width="80" height="80" />
                <input type="file" name="limgfile" id="file1" />
            @Html.ValidationMessageFor(model => model.limg, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "List")
</div>
